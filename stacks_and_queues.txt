/* Exercises */

1. What is the main difference between a stack and a queue?
A: A stack data structure uses a LIFO arrangement for the data.
   This means that the last item to enter the stack will also be
   first to leave the stack. This is similar to lunch trays being
   stacked and taken in a school cafeteria.
   A queue, on the other hand, uses a FIFO arrangement for its data.
   In a FIFO arrangement, the first object to enter the queue, will
   be the first to leave. This is similar to how a typical line at a
   coffee shop would work.

2. What are the similarities between stacks and queues?
A: Both of the data structures allow developers to prioritize
   tasks, which creates an oder in which tasks are dealt with.

3. Imagine you are an engineer tasked with implementing the UNDO and
   REDO options in a word processor such as Microsoft Word. Which data
   structure would you use for each option and why?
A: For the UNDO option, I would use a stack. The LIFO arrangement works
   for an UNDO action because the last thing you did would be the first
   action being undone. I would add the undone actions to another stack
   for the REDO option. That way the last UNDO you performed would be the
   first REDO that would take place.

/* Programming Questions */

1. Given a string, reverse it using a stack. For example, the string
   "Bloc!" should be converted to "!colB".
A: https://repl.it/@Sawyerbullock/ReverseString

2. Implement the pop method of a stack using one queue. Make a FIFO data
   structure mirror the functionality of a LIFO data structure. Since the
   internal list is not the same as defined in the checkpoint, it may help
   to rewrite the pseudocode first.
A: https://repl.it/@Sawyerbullock/QueClass

3. Implement the enqueue and dequeue methods defined in the checkpoint inside
   your own Queue class.
A: Reference answer for number 2.
